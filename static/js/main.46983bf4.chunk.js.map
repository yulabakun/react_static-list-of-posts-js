{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/NoCommentsMessage/NoCommentsMessage.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","NoCommentsMessage","style","fontWeight","PostInfo","post","title","length","PostList","posts","postsData","postsFromServer","authorId","postId","authorInfo","userId","usersFromServer","find","allPostComments","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"018IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1BC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,MACAC,EACEH,EADFG,KAGF,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBAAGG,UAAU,qBAAqBC,KAAI,iBAAYH,GAAlD,SACGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCjBIG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EACEC,KAAI,SAAAR,GAAO,OAAI,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,UCJrDC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBV,EAEEU,EAFFV,KACAC,EACES,EADFT,MAGF,OACE,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,MCVMW,EAAoB,kBAC/B,sBAAKR,UAAU,oBAAoB,UAAQ,oBAA3C,UACE,uBAEA,mBAAGS,MAAO,CAAEC,WAAY,QAAxB,iCCCSC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBb,EAIEa,EAJFb,KACAc,EAGED,EAHFC,MACAN,EAEEK,EAFFL,KACAJ,EACES,EADFT,SAGF,OACE,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGa,IAGH,8BACG,eAED,cAAC,EAAD,CAAUN,KAAMA,UAIpB,mBAAGP,UAAU,iBAAb,SACGD,IAGkB,IAApBI,EAASW,OACN,cAAC,EAAD,CAAaX,SAAUA,IACvB,cAAC,EAAD,QC/BGY,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAMZ,KAAI,SAAAQ,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKP,UCmB/B,IAAMY,EAAYC,EAAgBd,KAAI,SAACQ,GAC5C,IAjBiBO,EAUSC,EAOpBC,GAjBWF,EAiBYP,EAAKU,OAhBnBC,EAAgBC,MAAK,SAAAjB,GAAI,OAAIA,EAAKF,KAAOc,MAMjD,MAWDM,GARoBL,EAQiBR,EAAKP,GAPpCqB,EAAmBC,QAAO,SAAA/B,GAAO,OAAIA,EAAQwB,SAAWA,MASpE,OAAO,2BACFR,GADL,IAEEL,KAAMc,EACNlB,SAAUsB,OAIDG,EAAM,kBACjB,0BAAS5B,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUgB,MAAOC,QClCrBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.46983bf4.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const {\n    name,\n    email,\n    body,\n  } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a className=\"CommentInfo__email\" href={`mailto:${email}`}>\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments\n      .map(comment => <CommentInfo comment={comment} key={comment.id} />)\n    }\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","export const NoCommentsMessage = () => (\n  <div className=\"NoCommentsMessage\" data-cy=\"NoCommentsMessage\">\n    <hr />\n\n    <p style={{ fontWeight: 'bold' }}>No comments yet</p>\n  </div>\n);\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport { NoCommentsMessage } from '../NoCommentsMessage';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    body,\n    title,\n    user,\n    comments,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      {comments.length !== 0\n        ? <CommentList comments={comments} />\n        : <NoCommentsMessage />\n      }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nimport { PostList } from './components/PostList';\n\nfunction getAuthor(authorId) {\n  const author = usersFromServer.find(user => user.id === authorId);\n\n  if (author) {\n    return author;\n  }\n\n  return null;\n}\n\nfunction getAllPostComments(postId) {\n  const all = commentsFromServer.filter(comment => comment.postId === postId);\n\n  return all;\n}\n\nexport const postsData = postsFromServer.map((post) => {\n  const authorInfo = getAuthor(post.userId);\n  const allPostComments = getAllPostComments(post.id);\n\n  return {\n    ...post,\n    user: authorInfo,\n    comments: allPostComments,\n  };\n});\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={postsData} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}